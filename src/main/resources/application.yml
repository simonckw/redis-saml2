spring:
  security:
    saml2:
      relyingparty:
        registration:
          redis-saml2: # registrationId
            # "baseUrl", "registrationId", "baseScheme", "baseHost", and "basePort".
            # entity-id: "http://{baseUrl}/saml2/service-provider-metadata/{registrationId}"
            entity-id: redis-saml2
            acs:
              location: "http://localhost:8080/login/saml2/sso/redis-saml2"
              binding: POST
            # signing:
            #   credentials:
            #     - private-key-location: RsaKeyConverters.pkcs8().convert(inputStream)
            #       certificate-location: (X509Certificate) CertificateFactory.getInstance("X.509").generateCertificate(inputStream)
            # decryption:
            #   credentials:
            #     - private-key-location:
            #       certificate-location:
            # identityprovider: # before 2.7.0
            assertingparty:  # since 2.7.0
              entityId: "http://www.okta.com/exk57mj7molysmmYm5d7"
              metadataUri: https://dev-26681931.okta.com/app/exk57mj7molysmmYm5d7/sso/saml/metadata
              singlesignon:
                url: https://dev-26681931.okta.com/app/dev-26681931_springbootadmin_1/exk57mj7molysmmYm5d7/sso/saml
                binding: POST
                signRequest: false
              verification:
                credentials:
                  - certificate-location: "classpath:saml-certificate/okta.crt"
                    # private-key-location:
            # singlelogout: # since 2.7.0
            #   url:
            #   response-url:
            #   binding: POST

spring.session.timeout: 15m


